#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Thu May 12 23:01:01 2022

@author: longzekun
"""

import os
from glob import glob
import xml.etree.ElementTree as ET

xml_dir = r'/Users/longzekun/Documents/7821ICT/archive/annotations'####xml location
output_txt_dir = r'/Users/longzekun/Documents/7821ICT/archive/train'####output the yolov5 txt
###normalization
def convert(size, box):
    dw = 1. / (size[0])
    dh = 1. / (size[1])
    x = (box[0] + box[1]) / 2.0 - 1
    y = (box[2] + box[3]) / 2.0 - 1
    w = box[1] - box[0]
    h = box[3] - box[2]
    x = x * dw
    w = w * dw
    y = y * dh
    h = h * dh
    return (x, y, w, h)


# def deconvert(size, (x,y,w,h)):
#     x *= size[0]
#     w *= size[0]
#     y *= size[1]
#     h *= size[1]
#
#     b0 = (x+1)-w/2
#     b1 = (x+1)+w/2
#     b2 = (y+1)-h/2
#     b3 = (y+1)+h/2
#     return b0, b1, b2, b3

def load_xml():#### classification label
    classes = ['trafficlight','Stop','Speedlimit','Crosswalk']

    xml_list = glob(os.path.join(xml_dir, '*.xml'))
    # print(len(xml_list), xml_list)
    count_pictures = {}
    count_detection = {}

    count = 0
    class_num0 = 0
    class_num1 = 0
    class_num2 = 0
    class_num3 = 0
    

    for file in xml_list:
        count = count + 1
        imgName = file.split('\\')[-1][:-4]  # file name without suffix
        imglabel = os.path.join(output_txt_dir, imgName + '.txt')  # create txt
        # print(imglabel)
        out_file = open(imglabel, 'w', encoding='UTF-8')  #
        tree = ET.parse(file)
        root = tree.getroot()
        
        for child in root:# based on the xml sytle
            if child.tag == 'size':
                w = child[0].text
                h = child[1].text
            if child.tag == 'object':
                x_min = child[5][0].text
                y_min = child[5][1].text
                x_max = child[5][2].text
                y_max = child[5][3].text

                box = convert((int(w), int(h)), (int(x_min), int(x_max), int(y_min), int(y_max)))
                
                
                label = child[0].text
                if label in classes:##label orders
                    if label == 'trafficlight':
                        label = '0'
                        class_num0 += 1
                        out_file.write(str(label) + ' ' + ' '.join([str(round(a, 6)) for a in box]) + '\n')  # 
                    if label == 'Stop':
                        label = '1'
                        class_num1 += 1
                        out_file.write(str(label) + ' ' + ' '.join([str(round(a, 6)) for a in box]) + '\n')
                    if label == 'Speedlimit':
                        label = '2'
                        class_num2 += 1
                        out_file.write(str(label) + ' ' + ' '.join([str(round(a, 6)) for a in box]) + '\n')
                    if label == 'Crosswalk':
                        label = '3'
                        class_num3 += 1
                        out_file.write(str(label) + ' ' + ' '.join([str(round(a, 6)) for a in box]) + '\n')
                    
    print('ALL:', count, " trafficlight:", class_num0, "  Stop:", class_num1, "  Speedlimit:", class_num2,
          "  Crosswalk:", class_num3)
    return len(xml_list), classes, count_pictures, count_detection  # return into the all the main()


if __name__ == '__main__':
    classes = load_xml()
    print(classes)
   
